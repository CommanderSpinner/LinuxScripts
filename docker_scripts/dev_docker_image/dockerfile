# Basis-Image
FROM debian:bookworm

# Nicht-interaktive Installation
ENV DEBIAN_FRONTEND=noninteractive

# Arbeitsverzeichnis
WORKDIR /workspace

# Grundlegende Tools installieren (ohne .NET zuerst)
RUN apt-get update && apt-get install -y \
    sudo \
    curl \
    wget \
    git \
    build-essential \
    cmake \
    gdb \
    unzip \
    zip \
    python3 \
    python3-pip \
    openjdk-17-jdk \
    mono-complete \
    nodejs \
    npm \
    flatpak \
    bash-completion \
    locales \
    software-properties-common \
    gnupg \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Locale setzen
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen

# Microsoft-Paket-Repository für .NET hinzufügen
RUN wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && rm packages-microsoft-prod.deb

# .NET SDK installieren
RUN apt-get update && apt-get install -y dotnet-sdk-7.0 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# VS Code DEB installieren (lokales DEB im selben Ordner wie Dockerfile)
COPY code.deb /tmp/vscode.deb
RUN apt-get update && apt-get install -y /tmp/vscode.deb \
    && rm /tmp/vscode.deb

# Fastfetch installieren
RUN git clone https://github.com/LinusDierheimer/fastfetch.git /tmp/fastfetch \
    && cd /tmp/fastfetch \
    && cmake . \
    && make \
    && make install \
    && rm -rf /tmp/fastfetch

# Fastfetch beim Terminalstart ausführen
RUN echo "\n# Fastfetch beim Terminalstart\nfastfetch" >> /etc/bash.bashrc

# Standardbenutzer erstellen
RUN useradd -ms /bin/bash devuser \
    && echo "devuser:devuser" | chpasswd \
    && adduser devuser sudo
USER devuser
WORKDIR /home/devuser

# Standardkommando
CMD ["/bin/bash"]
